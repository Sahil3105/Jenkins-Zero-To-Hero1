pipeline {
    agent any

    environment {
        // Set any environment variables you need, for example, Docker Hub credentials.
        DOCKER_IMAGE = 'sahil3105/ultimate-cicd:8'
        DOCKER_REGISTRY = 'docker.io'
    }

    stages {
        stage('Declarative: Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Checkout Code') {
            steps {
                script {
                    // Pull latest changes from your GitHub repo
                    git url: 'https://github.com/Sahil3105/Jenkins-Zero-To-Hero1', branch: 'main'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image using the Dockerfile from the spring-boot-app folder
                    docker.build("${DOCKER_IMAGE}", "spring-boot-app/")
                }
            }
        }

        stage('Login to Docker Registry') {
            steps {
                script {
                    // Login to Docker Hub (Add your credentials here)
                    docker.withRegistry("https://${DOCKER_REGISTRY}", 'dockerhub-credentials') {
                        // Optional: Add any other commands you may need in this stage
                    }
                }
            }
        }

        stage('Tag and Push Docker Image') {
            steps {
                script {
                    // Push Docker image to Docker Hub registry
                    docker.withRegistry("https://${DOCKER_REGISTRY}", 'dockerhub-credentials') {
                        docker.image("${DOCKER_IMAGE}").push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                script {
                    // Update Kubernetes deployment file if needed (e.g., update image tag)
                    sh """
                        sed -i 's|image:.*|image: ${DOCKER_IMAGE}|g' k8s/deployment.yaml
                    """
                }
            }
        }

        stage('Push Changes to Git') {
            steps {
                script {
                    // Push changes to the repository (if any)
                    git commit message: "Updated deployment image tag", "--all"
                    git push
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Apply Kubernetes deployment
                    sh "kubectl apply -f k8s/deployment.yaml"
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution finished.'
        }
        success {
            echo 'Deployment successful.'
        }
        failure {
            echo 'Deployment failed. Please check the logs for errors.'
        }
    }
}
