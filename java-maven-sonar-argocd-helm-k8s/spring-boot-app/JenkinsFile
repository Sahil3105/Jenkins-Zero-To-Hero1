pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket for Docker commands
        }
    }
    stages {
        stage('Checkout') {
            steps {
                echo 'Checkout stage: passed'
                // Checkout the source code
                git branch: 'main', url: 'https://github.com/Sahil3105/Jenkins-Zero-To-Hero1.git'
            }
        }
        stage('Build and Test') {
            steps {
                echo 'Listing files:'
                sh 'ls -ltr'
                // Build the project and create a JAR file
                sh '''
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                mvn clean package
                '''
            }
        }
        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://54.87.136.17:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                    cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                    mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
                    '''
                }
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "sahil3105/ultimate-cicd:${BUILD_NUMBER}"
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-cred', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    script {
                        // Build the Docker image
                        sh '''
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        docker build -t ${DOCKER_IMAGE} .
                        '''
                        // Log in to Docker Hub and push the image
                        sh '''
                        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                        docker push ${DOCKER_IMAGE}
                        '''
                    }
                }
            }
        }
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero1"
                GIT_USER_NAME = "Sahil3105"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                    git config user.email "abhishek.xyz@gmail.com"
                    git config user.name "Abhishek Veeramalla"
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
                    '''
                }
            }
        }
    }
}
